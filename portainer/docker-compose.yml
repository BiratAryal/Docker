version: '3.7'

# *******************************************************************************************************
#                                  Network Defination
# *******************************************************************************************************

networks: #create custom network as per requirement
       test: #name of network
              driver: bridge
              ipam:
                     driver: default
                     config:
                     - subnet: 172.168.10.0/24
                       gateway: 172.168.10.1
       monitoring:
              driver: bridge

# *******************************************************************************************************
#                                  Volume defination
# *******************************************************************************************************

volumes:
       jenkins_home:
       nginx_home:
       portainer_data:
       prometheus_data: {}

# *******************************************************************************************************
#                                  Main Services Defination Starts
# *******************************************************************************************************

services: #define services or container that you want to build.
       portainer: #name of service that you want to install 
              image: portainer/portainer:latest #pull image from docker hub of latest version
              container_name: portainer #Define name of container
              volumes:
                     - /var/run/docker.sock:/var/run/docker.sock
                     - portainer_data:/data
                     # - /home/turboscript/Containers/Primary/Portainer/portainer_data:/data
              networks: #define network which was created at top
                     test: #name of network
                        ipv4_address: 172.168.10.254
              ports:
                     - 8000:8000
                     - 9000:9000
              restart: always #if host os is restarted then container also restarts itself.
# =======================================================================================================
#                                  Nginx Section
# =======================================================================================================

       nginx:
              build: /home/turboscript/Containers/Primary/Nginx
              container_name: nginx #defines name of container
              volumes: #using bind-mount all files in directroy nginx is mounted to html
                     - /home/turboscript/Containers/Primary/Nginx/html:/etc/nginx/html:rw
                     - nginx_home:/etc/nginx/:rw
                     # - /home/turboscript/shared/Docker/vid-tuts/nginx:/etc/nginx/html
              ports:
                     - 9999:80 #host port is 9999 and port of container is 80
              networks:
                     test:
                        ipv4_address: 172.168.10.2
       nginx2:
              build: /home/turboscript/Containers/Primary/Nginx
              # image: turboscript/nginx:04 #docker file present in this directory and builds from there.
              container_name: nginx2 #defines name of container
              volumes: #using bind-mount all files in directroy nginx is mounted to html
                     - /home/turboscript/Containers/Primary/Nginx/html:/etc/nginx/html:rw
                     - nginx_home:/etc/nginx/:rw
                     # - /home/turboscript/shared/Docker/vid-tuts/nginx:/etc/nginx/html
              ports:
                     - 9998:80 #host port is 9999 and port of container is 80
              networks:
                     test:
                        ipv4_address: 172.168.10.3
      
# =======================================================================================================
#                                  Jenkins Section
# =======================================================================================================
       jenkins:
              build: /home/turboscript/Containers/Primary/Jenkins
              privileged: true
              user: root
              container_name: jenkins
              volumes:
                     - jenkins_home:/var/jenkins_home
                     - /var/run/docker.sock:/var/run/docker.sock
                     - /usr/local/bin/docker:/usr/local/bin/docker
              ports:
                     - 9997:8080
                     - 50000:50000
              networks:
                     test:
                            ipv4_address: 172.168.10.4

# =======================================================================================================
#                                  Rancher (tested once)
# =======================================================================================================
       rancher:
              image: rancher/rancher
              privileged: true
              container_name: rancher
              volumes:
                     - /home/turboscript/Containers/Primary/rancher:/var/lib/rancher
              ports:
                     - 9996:80
                     - 8880:443
              restart: unless-stopped

# =======================================================================================================
#                                Prometheus Monitoring (test-phase)
# =======================================================================================================
       prometheus:
              image: prom/prometheus
              ports:
                     - '9090:9090'
              container_name: prometheus
              restart: always
              network_mode: host
              volumes:
                     - '$HOME/Containers/Primary/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
       grafana:
              image: grafana/grafana
              ports:
                - '3000:3000'
              container_name: grafana
              restart: always
              network_mode: host
              depends_on:
                     - prometheus
              volumes:
                     - '$HOME/Containers/Primary/grafana/config/grafana.ini:/etc/grafana/grafana.ini'
